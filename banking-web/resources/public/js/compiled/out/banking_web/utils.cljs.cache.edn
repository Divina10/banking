;; Analyzed by ClojureScript 1.7.107
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{uuid}, :name banking-web.utils, :imports nil, :requires {string clojure.string, clojure.string clojure.string, async cljs.core.async, cljs.core.async cljs.core.async, reagent reagent.core, reagent.core reagent.core, ajax.core ajax.core}, :uses {POST ajax.core, atom reagent.core, GET ajax.core}, :defs {uuid {:protocol-inline nil, :meta {:file "C:\\dev\\banking\\banking-web\\src\\banking_web\\utils.cljs", :line 11, :column 9, :end-line 11, :end-column 13, :arglists (quote ([])), :doc "returns a type 4 random UUID: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx"}, :name banking-web.utils/uuid, :variadic false, :file "src\\banking_web\\utils.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "returns a type 4 random UUID: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx"}, ajax-get {:protocol-inline nil, :meta {:file "C:\\dev\\banking\\banking-web\\src\\banking_web\\utils.cljs", :line 23, :column 9, :end-line 23, :end-column 17, :arglists (quote ([url pars])), :doc "returns a channel with the result of the json request to uri with a map of pars parameters\n    channel entries are of the form {:success true/false :response response/error-text}"}, :name banking-web.utils/ajax-get, :variadic false, :file "src\\banking_web\\utils.cljs", :end-column 17, :method-params ([url pars]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url pars])), :doc "returns a channel with the result of the json request to uri with a map of pars parameters\n    channel entries are of the form {:success true/false :response response/error-text}"}, mount-component {:protocol-inline nil, :meta {:file "C:\\dev\\banking\\banking-web\\src\\banking_web\\utils.cljs", :line 35, :column 9, :end-line 35, :end-column 24, :arglists (quote ([cmp props dom-id])), :doc "mounts the component cmp with properties props at dom-id\n    e.g., (mount-component maze1.logger/logger-coponent myprop \"logger\")"}, :name banking-web.utils/mount-component, :variadic false, :file "src\\banking_web\\utils.cljs", :end-column 24, :method-params ([cmp props dom-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cmp props dom-id])), :doc "mounts the component cmp with properties props at dom-id\n    e.g., (mount-component maze1.logger/logger-coponent myprop \"logger\")"}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:response :params :headers :error-handler :success :handler}, :order [:headers :params :handler :error-handler :success :response]}, :doc "clojurescript utils"}